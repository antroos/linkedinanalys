#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ ID –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
"""

import requests
import base64
import json
import os
import uuid

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è)
HUGGINGFACE_TOKEN = os.getenv("HUGGINGFACE_TOKEN", "")
HUGGINGFACE_ENDPOINT = os.getenv("HUGGINGFACE_ENDPOINT", "https://example.huggingface.cloud/invocations")

def test_unique_prompt():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ–º–ø—Ç —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º ID"""
    
    # –ü—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    test_image_data = base64.b64decode(
        "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChAI9PJsENQAAAABJRU5ErkJggg=="
    )
    img_b64 = base64.b64encode(test_image_data).decode('utf-8')
    
    headers = {
        "Authorization": f"Bearer {HUGGINGFACE_TOKEN}",
        "Content-Type": "application/json"
    }
    
    # –¢–µ—Å—Ç —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º ID
    unique_id = str(uuid.uuid4())[:8]
    payload = {
        "image": img_b64,
        "prompt": f"[ID:{unique_id}] Please describe what you see in this image.",
        "max_tokens": 512,
        "temperature": 0.7,
        "top_p": 0.95,
        "stop": ["<|im_end|>", "</s>"]
    }
    
    print(f"üß™ –¢–µ—Å—Ç —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º ID: {unique_id}")
    print(f"üìã –ü—Ä–æ–º–ø—Ç: {payload['prompt']}")
    
    try:
        response = requests.post(
            HUGGINGFACE_ENDPOINT,
            headers=headers,
            json=payload,
            timeout=30
        )
        
        print(f"üì° HTTP —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç:")
            print(f"üìÑ JSON: {json.dumps(result, indent=2, ensure_ascii=False)}")
            
            if 'choices' in result and result['choices']:
                text = result['choices'][0].get('text', '')
                print(f"üéØ –û—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏: '{text}'")
                print(f"üìä –î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞: {len(text)} —Å–∏–º–≤–æ–ª–æ–≤")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
            
    except Exception as e:
        print(f"üí• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")

if __name__ == "__main__":
    test_unique_prompt() 