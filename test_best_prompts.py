#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ª—É—á—à–∏—Ö –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
"""

import requests
import base64
import json
import os
from pathlib import Path

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è)
HUGGINGFACE_TOKEN = os.getenv("HUGGINGFACE_TOKEN", "")
HUGGINGFACE_ENDPOINT = os.getenv("HUGGINGFACE_ENDPOINT", "https://example.huggingface.cloud/invocations")
IMAGE_PATH = "–°–Ω–∏–º–æ–∫ —ç–∫—Ä–∞–Ω–∞ 2025-07-16 –≤ 01.41.27.png"

# –õ—É—á—à–∏–µ –ø—Ä–æ–º–ø—Ç—ã + –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–∞—Ä–∏–∞—Ü–∏–∏
BEST_PROMPTS = [
    "Human: What text is visible in this image?\nAssistant:",
    "What words and text are written in this image?",
    "Human: Read all text from this image.\nAssistant:",
    "Human: What text do you see?\nAssistant:",
    "Assistant: I can see text in this image. The text says:",
    "Q: What text is in this image?\nA:",
    "Please identify all text visible in this image:",
    "Human: Can you extract the text from this image?\nAssistant:"
]

def test_best_prompt(prompt_text, prompt_index):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–¥–∏–Ω –∏–∑ –ª—É—á—à–∏—Ö –ø—Ä–æ–º–ø—Ç–æ–≤"""
    
    print(f"\nüî• –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ #{prompt_index + 1}")
    print(f"üìã –ü—Ä–æ–º–ø—Ç: '{prompt_text}'")
    print("-" * 70)
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        with open(IMAGE_PATH, "rb") as f:
            image_data = f.read()
        
        img_b64 = base64.b64encode(image_data).decode('utf-8')
        
        headers = {
            "Authorization": f"Bearer {HUGGINGFACE_TOKEN}",
            "Content-Type": "application/json"
        }
        
        payload = {
            "image": img_b64,
            "prompt": prompt_text,
            "max_tokens": 200,
            "temperature": 0.1,
            "top_p": 0.9
        }
        
        response = requests.post(
            HUGGINGFACE_ENDPOINT,
            headers=headers,
            json=payload,
            timeout=30
        )
        
        if response.status_code == 200:
            result = response.json()
            
            if 'choices' in result and result['choices']:
                text = result['choices'][0].get('text', '').strip()
                tokens = result.get('usage', {}).get('completion_tokens', 0)
                
                print(f"‚úÖ –¢–æ–∫–µ–Ω–æ–≤: {tokens}")
                print(f"üìù –û—Ç–≤–µ—Ç: '{text}'")
                
                # –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞
                is_good = (
                    len(text) > 10 and 
                    not text.startswith('and ') and 
                    not text.startswith('including ') and
                    not text.startswith('with ') and
                    not text == ''
                )
                
                if is_good:
                    print(f"üéØ –û–¢–õ–ò–ß–ù–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢!")
                    return True, text
                else:
                    print(f"‚ö†Ô∏è –°–ª–∞–±—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
                    
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ {response.status_code}")
            
    except Exception as e:
        print(f"üí• –û—à–∏–±–∫–∞: {e}")
    
    return False, ""

def main():
    """–§–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª—É—á—à–∏—Ö –ø—Ä–æ–º–ø—Ç–æ–≤"""
    
    print("üèÜ –§–ò–ù–ê–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –õ–£–ß–®–ò–• –ü–†–û–ú–ü–¢–û–í")
    print(f"üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {IMAGE_PATH}")
    print("=" * 80)
    
    winners = []
    
    for i, prompt in enumerate(BEST_PROMPTS):
        success, response_text = test_best_prompt(prompt, i)
        if success:
            winners.append((i + 1, prompt, response_text))
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("\n" + "=" * 80)
    print("üèÖ –ü–û–ë–ï–î–ò–¢–ï–õ–ò:")
    print("=" * 80)
    
    if winners:
        for num, prompt, response in winners:
            print(f"\n#{num} –ü–†–û–ú–ü–¢: '{prompt}'")
            print(f"   –û–¢–í–ï–¢: '{response}'")
    else:
        print("‚ùå –ù–∏ –æ–¥–∏–Ω –ø—Ä–æ–º–ø—Ç –Ω–µ –ø—Ä–æ—à–µ–ª —Ç–µ—Å—Ç")
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è
    if winners:
        best_prompt = winners[0][1]  # –ü–µ—Ä–≤—ã–π —É—Å–ø–µ—à–Ω—ã–π
        print(f"\nüéØ –†–ï–ö–û–ú–ï–ù–î–£–ï–ú–´–ô –ü–†–û–ú–ü–¢ –î–õ–Ø –ë–û–¢–ê:")
        print(f"'{best_prompt}'")

if __name__ == "__main__":
    main() 